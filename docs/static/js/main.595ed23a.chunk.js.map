{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categ","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","props","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","divRoot","document","querySelector","ReactDOM","render"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAoB5C,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAK,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SArBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCTlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAIAI,MAAOF,GAJP,cAIbG,EAJa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAE1B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZvB,kBAgBZM,GAhBY,4CAAH,sDCEPO,EAAc,SAACC,GAGxB,OADAC,QAAQC,IAAIF,GAER,sBAAKG,UAAU,2DAAf,UACI,qBAAKC,IAAKJ,EAAMd,IAAKmB,IAAML,EAAMJ,QACjC,4BAAII,EAAMJ,YCHTU,EAAU,SAAC,GAAgB,IAAftB,EAAc,EAAdA,SAAc,ECHX,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNgB,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KA4BtC,OArBAC,qBAAW,WACP3B,EAAQC,GACH2B,MAAK,SAAAC,GACFC,YAAW,WACPJ,EAAS,CACLlB,KAAKqB,EACLL,SAAS,MAEd,UAIb,CAACvB,IASIwB,EDhBwBM,CAAa9B,GAA/Ba,EATsB,EAS3BN,KAAYgB,EATe,EASfA,QAOpB,OACI,qCACI,6BAAKvB,IAEJuB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAGQN,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEIA,GADMA,EAAIC,aEWvBoB,EArCM,WAAK,MAIc7C,mBAAS,CAAC,kBAJxB,mBAIf8C,EAJe,KAIH/C,EAJG,KAWtB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAGA,6BAEQ+C,EAAWvB,KAAI,SAAAT,GAAQ,OAElB,aADA,CACC,EAAD,CAEAA,SAAWA,GADJA,YCxB1BiC,G,MAAUC,SAASC,cAAc,UAEvCC,IAASC,OAAO,cAAC,EAAD,IAAiBJ,K","file":"static/js/main.595ed23a.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) =>{\r\n        //console.log(e.target.value)\r\n        setInputValue(e.target.value);        \r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(categ => [inputValue,...categ]);\r\n            setInputValue('');\r\n        }\r\n        \r\n        //console.log('Submit hecho')\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n/* AddCategory.defaultProps = {\r\n    setCategories:''\r\n} */\r\n","export const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=lOyveVF9GfpHHvhNnJ3R1GeL4dVqS1EC`\r\n\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs; \r\n    \r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = (props) => {\r\n\r\n    console.log(props);\r\n    return (\r\n        <div className=\"card animate__animated animate__delay-2s animate__fadeIn\">\r\n            <img src={props.url} alt ={props.title} />\r\n            <p>{props.title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n/*     const [images, setImages] = useState([]);\r\n\r\n    useEffect( ()=> {\r\n        getGifs(category)\r\n        .then(setImages)\r\n    }, [category]) */\r\n\r\n    const { data:images,loading} = useFetchGifs(category);\r\n\r\n    //console.log(state);\r\n\r\n\r\n\r\n    //getGifs();\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n            \r\n            <div className=\"card-grid\">\r\n                \r\n                {\r\n                    images.map(img => \r\n                        <GifGridItem \r\n                            key ={img.id}\r\n                        {...img} \r\n                        />\r\n                    )  \r\n                }\r\n            \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import {useState,useEffect} from 'react';\r\nimport {getGifs} from '../helpers/getGifs'\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( ()=> {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setTimeout(() => {\r\n                    setState({\r\n                        data:imgs,\r\n                        loading: false\r\n                    });\r\n                }, 3000);\r\n\r\n            })\r\n        \r\n    },[category]);\r\n\r\n    // setTimeout(()=>{\r\n    //     setState({\r\n    //         data: [1,2,3,4,5,6,7],\r\n    //         loading: false\r\n    //     })\r\n    // },3000);\r\n\r\n    return state;\r\n\r\n}","//rafc tab para auto completar\r\nimport React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () =>{\r\n\r\n    //const  categories = ['One Punch Man','Samurai X', 'Dragon Ball'];\r\n\r\n    const [categories, setCategories] = useState(['One Punch Man'])\r\n\r\n/*     const handleAdd = () =>{\r\n        //setCategories([...categories,'HunterXHunter']);\r\n        setCategories(categ =>[...categ,'HunterXHunter']);\r\n    } */\r\n//setCategories = {setCategories}\r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = {setCategories} />\r\n            <hr />\r\n\r\n            \r\n            <ol>\r\n                {   \r\n                    categories.map(category =>\r\n                         //<li key={category}>{category}</li>\r\n                         <GifGrid \r\n                         key = {category}\r\n                         category= {category}                        \r\n                         />\r\n                     )\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nconst divRoot = document.querySelector(\"#root\");\n\nReactDOM.render(<GifExpertApp />,divRoot)\n/* ReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n); */\n\n"],"sourceRoot":""}